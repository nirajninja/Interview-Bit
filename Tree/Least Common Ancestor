
 bool path(TreeNode* root,int B,vector<int>&ans)
 {
     if(root==NULL)return false;
     if(root->val ==B)
     {
         ans.push_back(root->val);
         return true;
     }
     
     if(path(root->left,B,ans))
     {
         ans.push_back(root->val);
         return true;
     }
     
     if(path(root->right,B,ans))
     {
         ans.push_back(root->val);
         return true;
     }
     return false;
     
 }
int Solution::lca(TreeNode* root, int B, int C) {
    
    
    if(root==NULL) return -1;
    vector<int>v1,v2;
    if(!path(root,B,v1) || !path(root,C,v2))
    {
        return -1;
    }
    int i=0,j=0;
    reverse(v1.begin(),v1.end());
    
    reverse(v2.begin(),v2.end());
    while(i<v1.size() && j<v2.size())
    {
        if(v1[i]!=v2[j])
        {
            break;
        }
        i++;
        j++;
    }
    return v1[i-1];
}

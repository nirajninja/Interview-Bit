/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
ListNode* reverseList(ListNode* head, int k) {

    if(head==NULL || k==1 ) return head;
    ListNode *dummy=new ListNode(0);
    dummy->next=head;
    ListNode* curr=dummy,*nex=dummy,*pre=dummy;
    int count=0;
    while(curr->next!=NULL)
    {
        curr=curr->next;
        count++;
    }
    
    while(count>=k)
    {
        curr=pre->next;
        nex=curr->next;
        for(int i=1;i<k;i++)
        {
            //1 2 3
            curr->next=nex->next;
            nex->next=pre->next;
            
            pre->next=nex;
            nex=curr->next;
            
        }
        pre=curr;
        count-=k;
    }
    return dummy->next;
}
ListNode* Solution::swapPairs(ListNode* A) {
    
    ListNode* head=reverseList(A,2);
    return head;
}

void choose(vector<int>&A,int index,int target,vector<int>curr,vector<vector<int>>&ans)
{
    if(target==0)
    {
        ans.push_back(curr);
    }
    
    for(int i=index;i<A.size();i++)
    {
        
    if(A[index]>target)
    {
        break;
    }
    
        curr.push_back(A[i]);
        choose(A,i,target-A[i],curr,ans);
        curr.pop_back();
    }
    
    
    
}

vector<vector<int> > Solution::combinationSum(vector<int> &A, int B) {

    sort(A.begin(),A.end());
    A.erase(unique(A.begin(), A.end()), A.end());
    
    vector<vector<int>>ans;
    choose(A,0,B,{},ans);
    
    return ans;
}

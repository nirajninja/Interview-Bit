int firstindex(vector<int>A,int B)
{
    int res=-1;
    int start=0;
    int end=A.size()-1;
    while(start<=end)
    {
        int mid=start+(end-start)/2;
        if(A[mid]==B)
        {
            res=mid;
            end=mid-1;
        }
        else if(A[mid]>B)
        {
            end=mid-1;
        }
        else{
            start=mid+1;
        }
    }
    return res;
}
int lastindex(vector<int>A,int B)
{
    int res=-1;
    int start=0;
    int end=A.size()-1;
    while(start<=end)
    {
        int mid=start+(end-start)/2;
        if(A[mid]==B)
        {
            res=mid;
            start=mid+1;
        }
        else if(A[mid]>B)
        {
            end=mid-1;
        }
        else{
            start=mid+1;
        }
    }
    return res;
}

int Solution::findCount(const vector<int> &A, int B) {
    int last=lastindex(A,B);
    int first=firstindex(A,B);
    if(last==-1 && first==-1)
    {
        return 0;
    }
    return last-first+1;
  
    
}

  int lcs(string a,string b)
    {
        int m=a.size();
        int n=b.size();
        int dp[m+1][n+1];
        for(int i=0;i<m+1;i++)
        {
            for(int j=0;j<n+1;j++)
            {
                if(i==0 || j==0)
                {
                    dp[i][j]=0;
                }
                else if(a[i-1] == b[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
            
        }
        return dp[n][m];
    }
    
int Solution::solve(string A) {
    string B=A;
    reverse(B.begin(),B.end());
    int n=lcs(A,B);
    return n;
}
